buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')

    /*
     JSON - XML converter 추가
     == compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.9.6'(버전 중 최신)
     이것을 추가하면 @RestController 에서 return 의 default 가 XML 이 된다.
     (즉, Spring Boot 의 default 인 JSON 으로 나오지 않는다!)

     따라서 일단 주석처리 한다 ...
     */
    // compile('com.fasterxml.jackson.dataformat:jackson-dataformat-xml')
    
    // webjar - jQuery 추가
    compile('org.webjars.bower:jquery:3.3.1')

    // webjars-locator-core 추가 (webjar 를 등록하고, html 내에서 javascript 를 호출할 때 버전을 안적어줘도 됨 !)
    compile('org.webjars:webjars-locator-core')

    // hateoas 추가
    compile('org.springframework.boot:spring-boot-starter-hateoas')

    // [ Spring Boot Admin Client ]
    // 클라이언트 용 admin dependency 추가
    // spring-boot-admin-starter-client dependency 추가
    compile('de.codecentric:spring-boot-admin-starter-client:2.0.2')


    // HtmlUnit 의존성 추가 (in test)
    testCompile('org.seleniumhq.selenium:htmlunit-driver')
    testCompile('net.sourceforge.htmlunit:htmlunit')

    runtime('org.springframework.boot:spring-boot-devtools')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}
